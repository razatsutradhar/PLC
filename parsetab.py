
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL CAR CDR CONS DIV GREAT ID IF LESS LIST LPAR MINUS MULT NUMBER OR PLUS RPAR SEMIlispStart : lisp SEMIlisp : NUMBERlisp : BOOLlisp : IDlisp : LPAR PLUS lisp lisp RPARlisp : LPAR MINUS lisp lisp RPARlisp : LPAR MULT lisp lisp RPARlisp : LPAR DIV lisp lisp RPARlisp : LPAR IF lisp lisp lisp RPARlisp : LPAR LESS lisp lisp RPARlisp : LPAR OR lisp lisp RPARlisp : LPAR AND lisp lisp RPARlisp : LPAR GREAT lisp lisp RPARalist : LPAR LIST RPAR'
    
_lr_action_items = {'NUMBER':([0,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,35,36,37,38,40,41,42,43,44,],[3,-2,-3,-4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-5,-6,-7,-8,-10,-11,-12,-13,-9,]),'BOOL':([0,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,35,36,37,38,40,41,42,43,44,],[4,-2,-3,-4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-5,-6,-7,-8,-10,-11,-12,-13,-9,]),'ID':([0,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,35,36,37,38,40,41,42,43,44,],[5,-2,-3,-4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-5,-6,-7,-8,-10,-11,-12,-13,-9,]),'LPAR':([0,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,35,36,37,38,40,41,42,43,44,],[6,-2,-3,-4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-5,-6,-7,-8,-10,-11,-12,-13,-9,]),'$end':([1,7,],[0,-1,]),'SEMI':([2,3,4,5,35,36,37,38,40,41,42,43,44,],[7,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-13,-9,]),'RPAR':([3,4,5,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[-2,-3,-4,35,36,37,38,40,41,42,43,-5,-6,-7,-8,44,-10,-11,-12,-13,-9,]),'PLUS':([6,],[8,]),'MINUS':([6,],[9,]),'MULT':([6,],[10,]),'DIV':([6,],[11,]),'IF':([6,],[12,]),'LESS':([6,],[13,]),'OR':([6,],[14,]),'AND':([6,],[15,]),'GREAT':([6,],[16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lispStart':([0,],[1,]),'lisp':([0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,],[2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lispStart","S'",1,None,None,None),
  ('lispStart -> lisp SEMI','lispStart',2,'p_lispStart','LISPParser.py',6),
  ('lisp -> NUMBER','lisp',1,'p_lisp_1','LISPParser.py',11),
  ('lisp -> BOOL','lisp',1,'p_lisp_2','LISPParser.py',16),
  ('lisp -> ID','lisp',1,'p_lisp_3','LISPParser.py',21),
  ('lisp -> LPAR PLUS lisp lisp RPAR','lisp',5,'p_lisp_4','LISPParser.py',26),
  ('lisp -> LPAR MINUS lisp lisp RPAR','lisp',5,'p_lisp_5','LISPParser.py',31),
  ('lisp -> LPAR MULT lisp lisp RPAR','lisp',5,'p_lisp_6','LISPParser.py',36),
  ('lisp -> LPAR DIV lisp lisp RPAR','lisp',5,'p_lisp_7','LISPParser.py',41),
  ('lisp -> LPAR IF lisp lisp lisp RPAR','lisp',6,'p_wae_8','LISPParser.py',46),
  ('lisp -> LPAR LESS lisp lisp RPAR','lisp',5,'p_lisp_9','LISPParser.py',51),
  ('lisp -> LPAR OR lisp lisp RPAR','lisp',5,'p_lisp_10','LISPParser.py',56),
  ('lisp -> LPAR AND lisp lisp RPAR','lisp',5,'p_lisp_11','LISPParser.py',60),
  ('lisp -> LPAR GREAT lisp lisp RPAR','lisp',5,'p_lisp_12','LISPParser.py',64),
  ('alist -> LPAR LIST RPAR','alist',3,'p_alist_1','LISPParser.py',69),
]
